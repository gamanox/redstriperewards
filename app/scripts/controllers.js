// Generated by CoffeeScript 1.6.3
'use strict';
/* Controllers*/

var checkLogin, doAuth, doLogin, getInfo, get_age, makeid, popSMS, userData;

userData = [];

popSMS = function() {};

makeid = function() {
  var i, possible, text;
  text = "";
  possible = "ABCDEFGHJKLMNPRSTWXYZ2346789";
  i = 0;
  while (i < 6) {
    text += possible.charAt(Math.floor(Math.random() * possible.length));
    i++;
  }
  console.log(text);
  return text;
};

get_age = function(born, now) {
  var birthday;
  birthday = new Date(now.getFullYear(), born.getMonth(), born.getDate());
  if (now >= birthday) {
    return now.getFullYear() - born.getFullYear();
  } else {
    return now.getFullYear() - born.getFullYear() - 1;
  }
};

checkLogin = function() {
  return FB.getLoginStatus(function(response) {
    if (response.status === 'connected') {
      return window.location.href = '#/profile';
    } else if (response.status === 'not_authorized') {
      return window.location.href = '#/register';
    } else {
      return window.location.href = '#/home';
    }
  });
};

getInfo = function(response) {
  var email, firstname, gender, lastname;
  console.log(JSON.stringify(response));
  email = response.email;
  firstname = response.first_name;
  lastname = response.last_name;
  gender = response.gender;
  $('#name_confirmation').val(firstname);
  $('#Lastname_confirmation').val(lastname);
  $('#mail_confirmation').val(email);
  console.log('firstname: ' + firstname);
  console.log('lastname: ' + lastname);
  return console.log('correo: ' + email);
};

doAuth = function() {};

doLogin = function() {};

window.fbAsyncInit = function() {
  FB.init({
    appId: "1552388065005528",
    cookie: true,
    xfbml: true,
    version: "v2.1"
  });
  doLogin = function() {
    return FB.login(function(response) {
      if (response.status === 'connected') {
        return FB.api("/me", function(response) {
          console.log(response);
          userData.email = response.email;
          userData.first_name = response.first_name;
          userData.last_name = response.last_name;
          userData.phone = "5852845";
          userData.fbid = response.id;
          userData.picture = "https://graph.facebook.com/" + response.id + "/picture?type=square";
          return window.location.href = '#/profile';
        });
      } else if (response.status === 'not_authorized') {
        return window.location.href = '#/register';
      } else {
        return console.log(response.status);
      }
    }, {
      scope: 'email'
    });
  };
  return doAuth = function() {
    return FB.login(function(response) {
      if (response.status === 'connected') {
        window.location.href = '#/confirm_social';
        return FB.api("/me", function(response) {
          return getInfo(response);
        });
      } else if (response.status === 'not_authorized') {

      } else {
        return console.log(response.status);
      }
    }, {
      scope: 'email'
    });
  };
};

$(function() {
  return $('body').prepend('<div id="fb-root"></div>');
});

(function(d, s, id) {
  var fjs, js;
  js = void 0;
  fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) {
    return;
  }
  js = d.createElement(s);
  js.id = id;
  js.src = "https://connect.facebook.net/es_LA/sdk.js";
  fjs.parentNode.insertBefore(js, fjs);
})(document, "script", "facebook-jssdk");

angular.module('app.controllers', []).controller('AppCtrl', [
  '$scope', '$location', '$resource', '$rootScope', function($scope, $location, $resource, $rootScope) {
    $scope.$location = $location;
    $scope.$watch('$location.path()', function(path) {
      return $scope.activeNavId = path || '/';
    });
    return $scope.getClass = function(id) {
      if ($scope.activeNavId.substring(0, id.length) === id) {
        return 'active';
      } else {
        return '';
      }
    };
  }
]).controller('ageCtrl', function($scope) {
  var Main, dropdowns;
  Main = {
    init: function() {}
  };
  dropdowns = new Dropdowns();
  dropdowns.init();
  return;
  Main.init();
}).controller('registerCtrl', function($scope) {
  var emailError, errorForm, limitText, nameError, passError, phoneError, validForm, validateEmail;
  errorForm = "";
  emailError = "";
  phoneError = "";
  passError = "";
  nameError = "";
  $("input#cel_registration").on("keyup", function() {
    return limitText(this, 7);
  });
  validateEmail = function($email) {
    var emailReg;
    emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
    if (!emailReg.test($email)) {
      return false;
    } else {
      return true;
    }
  };
  limitText = function(field, maxChar) {
    var ref, val;
    ref = $(field);
    val = ref.val();
    if (val.length >= maxChar) {
      return ref.val(function() {
        console.log(val.substr(0, maxChar));
        return val.substr(0, maxChar);
      });
    }
  };
  validForm = function() {
    var inputConfirmPass, inputEmail, inputFname, inputLname, inputPass, inputPhone;
    inputEmail = $('#mail_registration').val();
    inputPass = $('#password_registration').val();
    inputConfirmPass = $('#password2_registration').val();
    inputPhone = $('#cel_registration').val();
    inputFname = $('#name_registration').val();
    inputLname = $('#Lastname_registration').val();
    if (inputFname === '') {
      errorForm = 'Incorrect fields: ';
      nameError = 'name ';
    }
    if (inputLname === '') {
      errorForm = 'Incorrect fields: ';
      nameError = 'name ';
    }
    if (inputEmail === '') {
      errorForm = 'Incorrect fields: ';
      emailError = "email ";
    }
    if (!validateEmail(inputEmail)) {
      $('#mail_registration').val('');
      errorForm = 'Incorrect fields: ';
      emailError = "email ";
    }
    if (inputConfirmPass === '' || inputPass === '') {
      errorForm = 'Incorrect fields: ';
      passError = "password ";
    }
    if (inputPass === '') {
      errorForm = 'Incorrect fields: ';
      passError = "password ";
    }
    if (inputConfirmPass !== inputPass) {
      errorForm = 'Incorrect fields: ';
      passError = "password ";
    }
    if (inputPhone.length < 7) {
      errorForm = 'Incorrect fields: ';
      phoneError = "phone ";
    }
    if (errorForm === '') {
      emailError = "";
      phoneError = "";
      passError = "";
      nameError = "";
      userData.email = inputEmail;
      userData.phone = inputPhone;
      userData.password = inputPass;
      userData.first_name = inputFname;
      userData.last_name = inputLname;
      console.log(userData);
      return window.location.href = '#/verify_account';
    }
  };
  $('.btn_getS').on('click', function() {
    errorForm = "";
    emailError = "";
    phoneError = "";
    passError = "";
    nameError = "";
    console.log('click');
    validForm();
    return $('.alert p').html(errorForm + emailError + phoneError + passError + nameError);
  });
  return $('.conect_facebook').on('click', function() {
    console.log('clicl');
    return doAuth();
  });
}).controller('loginCtrl', function($scope) {
  var Main;
  $('.conect_facebook').on('click', function() {
    return doLogin();
  });
  Main = {
    init: function() {
      var openShows;
      openShows = new OpenShows();
      openShows.init();
    }
  };
  return $(function() {
    Main.init();
  });
}).controller('congratsCtrl', function($scope) {}).controller('profileCtrl', function($scope) {
  var Main;
  console.log(userData);
  $('.circleimg img').attr({
    src: userData.picture
  });
  $('#userNameprofile').html(userData.first_name);
  Main = {
    init: function() {
      var openShows;
      openShows = new OpenShows();
      openShows.init();
    }
  };
  return $(function() {
    Main.init();
  });
}).controller('connectCtrl', function($scope) {}).controller('verifysmsCtrl', function($scope) {
  if (userData.phone) {
    console.log('si hay teléfono');
    return $('#verified-sms').html('+1 (876) ' + userData.phone);
  } else {
    console.log('no hay teléfono');
    return $('#verified-sms').html('your cellphone');
  }
}).controller('verifyemailCtrl', function($scope) {
  if (userData.email) {
    console.log('si hay correo');
    return $('#verified-email').html(userData.email);
  } else {
    console.log('no hay correo');
    return $('#verified-email').html('your email');
  }
}).controller('confirm_socialCtrl', function($scope) {
  var limitText;
  limitText = function(field, maxChar) {
    var ref, val;
    ref = $(field);
    val = ref.val();
    if (val.length >= maxChar) {
      return ref.val(function() {
        console.log(val.substr(0, maxChar));
        return val.substr(0, maxChar);
      });
    }
  };
  $("input#cel_confirmation").on("keyup", function() {
    return limitText(this, 7);
  });
  return $('.btn_conf').on('click', function() {
    var campo, telLength;
    campo = $("input#cel_confirmation").val();
    telLength = campo.length;
    if (telLength === 7) {
      userData.phone = campo;
      userData.email = $('input#mail_confirmation').val();
      console.log(userData.phone);
      return window.location.href = '#/verify_account';
    }
  });
}).controller('prizesCtrl', function($scope) {
  var Main;
  popSMS = function() {
    var sendSMS;
    if (userData.phone) {
      $('#sms_info_gate .topONe p').html('A redemption code was sent to +1 (876) ' + userData.phone);
    } else {
      $('#sms_info_gate .topONe p').html('A redemption code was sent to your cellphone');
    }
    if (userData.email) {
      $('#email_info_gate .topONe p').html('A redemption code was sent to ' + userData.email);
    } else {
      $('#email_info_gate .topONe p').html('A redemption code was sent to your email');
    }
    jQuery.ajaxx = (function(_ajax) {
      var YQL, exRegex, hostname, isExternal, protocol, query;
      isExternal = function(url) {
        return !exRegex.test(url) && /:\/\//.test(url);
      };
      protocol = location.protocol;
      hostname = location.hostname;
      exRegex = RegExp(protocol + "//" + hostname);
      YQL = "http" + (/^https/.test(protocol) ? "s" : "") + "://query.yahooapis.com/v1/public/yql?callback=?";
      query = "select * from html where url=\"{URL}\" and xpath=\"*\"";
      return function(o) {
        var url;
        url = o.url;
        if (/get/i.test(o.type) && !/json/i.test(o.dataType) && isExternal(url)) {
          o.url = YQL;
          o.dataType = "json";
          o.data = {
            q: query.replace("{URL}", url + (o.data ? (/\?/.test(url) ? "&" : "?") + jQuery.param(o.data) : "")),
            format: "xml"
          };
          if (!o.success && o.complete) {
            o.success = o.complete;
            delete o.complete;
          }
          o.success = (function(_success) {
            return function(data) {
              if (_success) {
                _success.call(this, {
                  responseText: data.results[0].replace(/<script[^>]+?\/>|<script(.|\s)*?\/script>/g, "")
                }, "success");
              }
            };
          })(o.success);
        }
        return _ajax.apply(this, arguments);
      };
    })(jQuery.ajax);
    sendSMS = function() {
      var idSMS, phone, urlSrvc;
      idSMS = makeid();
      phone = userData.phone;
      urlSrvc = "http://services.newcomwi.com/mt/http/run?username=redstriperds&password=R3DP8Shrds&sender=8764447744&recipient=1876" + phone + "&messageType=SMS&message=" + idSMS;
      console.log(urlSrvc);
      return $.ajaxx({
        url: urlSrvc,
        type: "GET",
        success: function(res) {
          var text;
          text = res.responseText;
          text = text.split("(");
          text = text[2];
          text = text.split(")");
          text = text[0];
          console.log('SMS Send response: ' + text);
        }
      });
    };
    return $('#sms_info').on('click', function() {
      return sendSMS();
    });
  };
  Main = {
    init: function() {
      var openShows;
      openShows = new OpenShows();
      openShows.init();
    }
  };
  return $(function() {
    Main.init();
  });
}).controller('verifyaccountCtrl', function($scope) {
  var sendSMS;
  console.log(userData.phone);
  jQuery.ajaxx = (function(_ajax) {
    var YQL, exRegex, hostname, isExternal, protocol, query;
    isExternal = function(url) {
      return !exRegex.test(url) && /:\/\//.test(url);
    };
    protocol = location.protocol;
    hostname = location.hostname;
    exRegex = RegExp(protocol + "//" + hostname);
    YQL = "http" + (/^https/.test(protocol) ? "s" : "") + "://query.yahooapis.com/v1/public/yql?callback=?";
    query = "select * from html where url=\"{URL}\" and xpath=\"*\"";
    return function(o) {
      var url;
      url = o.url;
      if (/get/i.test(o.type) && !/json/i.test(o.dataType) && isExternal(url)) {
        o.url = YQL;
        o.dataType = "json";
        o.data = {
          q: query.replace("{URL}", url + (o.data ? (/\?/.test(url) ? "&" : "?") + jQuery.param(o.data) : "")),
          format: "xml"
        };
        if (!o.success && o.complete) {
          o.success = o.complete;
          delete o.complete;
        }
        o.success = (function(_success) {
          return function(data) {
            if (_success) {
              _success.call(this, {
                responseText: data.results[0].replace(/<script[^>]+?\/>|<script(.|\s)*?\/script>/g, "")
              }, "success");
            }
          };
        })(o.success);
      }
      return _ajax.apply(this, arguments);
    };
  })(jQuery.ajax);
  sendSMS = function() {
    var idSMS, phone, urlSrvc;
    idSMS = makeid();
    phone = userData.phone;
    urlSrvc = "http://services.newcomwi.com/mt/http/run?username=redstriperds&password=R3DP8Shrds&sender=8764447744&recipient=1876" + phone + "&messageType=SMS&message=" + idSMS;
    console.log(urlSrvc);
    return $.ajaxx({
      url: urlSrvc,
      type: "GET",
      success: function(res) {
        var text;
        text = res.responseText;
        text = text.split("(");
        text = text[2];
        text = text.split(")");
        text = text[0];
        console.log('SMS Send response: ' + text);
      }
    });
  };
  return $('.btn_sms').on('click', function() {
    return sendSMS();
  });
}).controller('termsCtrl', function($scope) {}).controller('TodoCtrl', [
  '$scope', function($scope) {
    $scope.todos = [
      {
        text: "learn angular",
        done: true
      }, {
        text: "build an angular app",
        done: false
      }
    ];
    $scope.addTodo = function() {
      $scope.todos.push({
        text: $scope.todoText,
        done: false
      });
      return $scope.todoText = "";
    };
    $scope.remaining = function() {
      var count;
      count = 0;
      angular.forEach($scope.todos, function(todo) {
        return count += (todo.done ? 0 : 1);
      });
      return count;
    };
    return $scope.archive = function() {
      var oldTodos;
      oldTodos = $scope.todos;
      $scope.todos = [];
      return angular.forEach(oldTodos, function(todo) {
        if (!todo.done) {
          return $scope.todos.push(todo);
        }
      });
    };
  }
]);
